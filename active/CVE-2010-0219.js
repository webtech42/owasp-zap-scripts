/*
 * MIT License
 *
 * Copyright (c) 2022 Sepehrdad
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

var RISK = 3 // 0: info, 1: low, 2: medium, 3: high
var CONFIDENCE = 3 // 0: falsePositive, 1: low, 2: medium, 3: high, 4: confirmed
var TITLE = "[CVE-2010-0219] Apache Axis2 Default Login"
var DESCRIPTION = " Apache Axis2, as used in dswsbobje.war in SAP " +
	"BusinessObjects Enterprise XI 3.2, CA ARCserve D2D r15, and " +
	"other products, has a default password of axis2 for the admin " +
	"account, which makes it easier for remote attackers to execute arbitrary" +
	" code by uploading a crafted web service."
var SOLUTION = "Ensure proper firewalls are in place within your environment " +
	"to prevent public exposure."
var REFERENCE = "https://nvd.nist.gov/vuln/detail/CVE-2010-0219"
var OTHER = "see: http://www.rapid7.com/security-center/advisories/R7-0037.jsp"

function log(msg) {
	print("[" + this["zap.script.name"] + "] " + msg);
}

function alert(as, msg, evidence) {
	as.newAlert()
		.setRisk(RISK)
		.setConfidence(CONFIDENCE)
		.setName(TITLE)
		.setDescription(DESCRIPTION)
		.setEvidence(evidence)
		.setOtherInfo(OTHER)
		.setSolution(SOLUTION)
		.setReference(REFERENCE)
		.setMessage(msg)
		.raise();
}

function scanNode(as, msg) {

	var uri = msg.getRequestHeader().getURI();

	if (uri.getPath() != null && uri.getPath().length() > 1) {
		log("ignoring scan for " + uri);
		return;
	}

	log("scanning " + uri);

	var paths = {
		"/axis2-admin/login": "loginUsername=admin&loginPassword=axis2",
		"/axis2/axis2-admin/login": "userName=admin&password=axis2&submit=+Login+",
	}

	for (var path in paths) {

		// Copy requests before reusing them
		msg = msg.cloneRequest();

		var request_header = msg.getRequestHeader();
		uri = request_header.getURI();
		var request_body = msg.getRequestBody();

		uri.setPath(path);
		request_header.setMethod("POST");
		request_header.setHeader("Content-Type", "application/x-www-form-urlencoded");
		request_body.setBody(paths[path]);

		// sendAndReceive(msg, followRedirect, handleAntiCSRFtoken)
		as.sendAndReceive(msg, false, false);

		var response_header = msg.getResponseHeader();
		var response_body = msg.getResponseBody();

		var evidence_idx = response_body.toString()
			.indexOf("<h1>Welcome to Axis2 Web Admin Module !!</h1>");

		// Test the response here, and make other requests as required
		if (response_header.getStatusCode() == 200 && evidence_idx >= 0) {
			alert(as, msg, response_body.toString().substring(evidence_idx));
			return;
		}

		if (as.isStop()) {
			return;
		}
	}
}

function scan(as, msg, param, value) {
	return;
}
